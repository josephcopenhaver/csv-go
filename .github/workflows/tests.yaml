name: tests
on:
  push:
  schedule:
    - cron: "15 12 * * 6" # INIT_CRON_EXPRESSION: echo "$(((RANDOM%60))) $(((RANDOM%24)))"' * * '"$( if [[ $(((RANDOM%2))) -eq 0 ]]; then echo 0; else echo 6; fi )"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go:
          - ver: "1.24"
            name: "1.24"
          - ver: ">=1.24"
            name: "gte-1.24"
    name: Go ${{ matrix.go.ver }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go.ver }}
      - name: verify golang files are consistently formatted and generated
        run: |
          [ `git status --porcelain=1 | wc -l` -eq 0 ] || (2>&1 echo "failed to establish that files were unchanged before running go-generate check" ; exit 1)
          go generate ./...
          [ `git status --porcelain=1 | wc -l` -eq 0 ] || (2>&1 echo "files changed after running go-generate" ; exit 1)
      - name: test without race
        run: go test ./...
      - name: test with race
        run: |
          go test -coverprofile=coverage.out -race $(go list ./... | grep -vE '^github\.com/josephcopenhaver/csv-go/internal/examples/')
          go tool cover -html=coverage.out -o coverage.html
      - name: Upload code coverage report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-${{ matrix.go.name }}
          path: coverage.html
